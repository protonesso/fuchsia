# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/test.gni")
import("//build/test/test_package.gni")
import("//src/media/audio/hardware.gni")

group("test") {
  testonly = true
  deps = [
    ":audio_admin_tests",
    ":audio_core_hardware_tests",
    ":audio_device_service_tests",
    ":audio_device_tests",
    ":audio_fidl_tests",
    ":audio_pipeline_tests",
    "//src/media/audio/virtual_audio_service",
  ]
}

test_package("audio_admin_tests") {
  deps = [ ":audio_admin_test_bin" ]

  tests = [
    {
      name = "audio_admin_tests"

      # This (effectively real-time) test must be run on real hardware.
      environments = extended_hardware_envs
    },
  ]
}

executable("audio_admin_test_bin") {
  testonly = true
  output_name = "audio_admin_tests"

  sources = [ "audio_admin/audio_admin_test.cc" ]

  deps = [
    "//sdk/fidl/fuchsia.media",
    "//sdk/fidl/fuchsia.virtualaudio",
    "//sdk/lib/sys/cpp",
    "//src/lib/fxl/test:gtest_main_with_syslog",
    "//src/lib/syslog/cpp",
    "//src/media/audio/lib/test",
    "//zircon/public/lib/fzl",
  ]
}

test_package("audio_core_hardware_tests") {
  deps = [ ":audio_core_hardware_tests_bin" ]

  tests = [
    {
      name = "audio_core_hardware_tests"

      # By definition this validates software that requires real audio input hardware.
      environments = built_in_input_hardware_envs
    },
  ]
}

executable("audio_core_hardware_tests_bin") {
  testonly = true
  output_name = "audio_core_hardware_tests"

  sources = [
    "hardware/audio_core_hardware_test.cc",
    "hardware/audio_core_hardware_test.h",
  ]

  deps = [
    "//sdk/fidl/fuchsia.media",
    "//sdk/lib/sys/cpp",
    "//src/lib/fxl/test:gtest_main_with_syslog",
    "//src/lib/fxl/test:test_settings",
    "//src/lib/syslog/cpp",
    "//src/media/audio/lib/test:test_fixture",
    "//zircon/public/lib/fzl",
  ]
}

test_package("audio_device_service_tests") {
  deps = [ ":audio_device_service_tests_bin" ]

  tests = [
    {
      name = "audio_device_service_tests"
      environments = basic_envs
    },
  ]
}

executable("audio_device_service_tests_bin") {
  testonly = true
  output_name = "audio_device_service_tests"

  sources = [
    "service/audio_device_service_test.cc",
    "service/audio_device_service_test.h",
  ]

  deps = [
    "//garnet/public/lib/fostr",
    "//garnet/public/lib/fostr/fidl/fuchsia.media",
    "//sdk/fidl/fuchsia.hardware.audio",
    "//sdk/fidl/fuchsia.media",
    "//sdk/fidl/fuchsia.virtualaudio",
    "//src/lib/fxl/test:gtest_main_with_syslog",
    "//src/lib/fxl/test:test_settings",
    "//src/media/audio/audio_core/testing",
    "//src/media/audio/lib/test:hermetic_audio_test",
  ]
}

test_package("audio_device_tests") {
  deps = [ "//src/media/audio/audio_core/test/device:audio_device_tests_bin" ]

  tests = [
    {
      name = "audio_device_tests"
      environments = basic_envs
    },
  ]
}

test_package("audio_fidl_tests") {
  deps = [ ":audio_fidl_tests_bin" ]

  tests = [
    {
      name = "audio_fidl_tests"
      environments = basic_envs
    },
  ]
}

executable("audio_fidl_tests_bin") {
  testonly = true
  output_name = "audio_fidl_tests"

  sources = [
    "fidl/audio_capturer_test.cc",
    "fidl/audio_renderer_sync_test.cc",
    "fidl/audio_renderer_test.cc",
    "fidl/audio_sync_test.cc",
    "fidl/audio_test.cc",
    "fidl/gain_control_test.cc",
    "fidl/gain_control_test.h",
  ]

  deps = [
    "//sdk/fidl/fuchsia.media",
    "//src/lib/fxl/test:gtest_main_with_syslog",
    "//src/media/audio/lib/clock",
    "//src/media/audio/lib/clock/testing",
    "//src/media/audio/lib/logging",
    "//src/media/audio/lib/test:hermetic_audio_test",
  ]
}

test_package("audio_pipeline_tests") {
  deps = [ ":audio_pipeline_tests_bin" ]

  tests = [
    {
      name = "audio_pipeline_tests"

      # This (effectively real-time) test must be run on a true hardware-based target.
      # By specifying 'extended_hardware_envs' instead of 'hardware_envs', we allow these tests to
      # run on the VIM2 platform, where our audio driver for the HDMI-based audio output does not
            # yet generate position notifications.
      environments = extended_hardware_envs
    },
  ]
}

executable("audio_pipeline_tests_bin") {
  testonly = true
  output_name = "audio_pipeline_tests"

  sources = [
    "pipeline/audio_pipeline_test.cc",
    "pipeline/audio_pipeline_test.h",
  ]

  deps = [
    "//sdk/fidl/fuchsia.media",
    "//sdk/fidl/fuchsia.virtualaudio",
    "//sdk/lib/media/cpp:no_converters",
    "//src/lib/fxl/test:gtest_main_with_syslog",
    "//src/lib/syslog/cpp",
    "//src/media/audio/lib/logging",
    "//src/media/audio/lib/test:hermetic_audio_test",
    "//zircon/public/lib/fzl",
  ]
}
